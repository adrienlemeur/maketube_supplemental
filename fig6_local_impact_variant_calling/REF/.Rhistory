head(all_genome_regions$list, 50), function(x) replacing_regions(x, regions), USE.NAMES = F
)
sapply("1,2,3,4", function(x) replacing_regions(x, regions))
regions
names(regions) <- c(1:5, "none")
replacing_regions <- function(x, y) {
do.call(sapply(x, function(z) y[z]), c)
}
sapply("1,2,3,4", function(x) replacing_regions(x, regions))
sapply("1,2,3,4", function(x) replacing_regions(x, regions), USE.NAMES = F)
sapply( list("1,2,3,4", '1,5'), function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
sapply(x, function(z) regions[z])
}
sapply(list("1,2,3,4", '1,5'), function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
do.call(rbind, sapply(x, function(z) regions[z]))
}
replacing_regions <- function(x, regions) {
do.call(rbind, sapply(strsplit(x, ","), function(z) regions[z]))
}
sapply(list("1,2,3,4", "1,5"), function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
sapply(strsplit(x, ","), function(z) regions[z])
}
sapply(list("1,2,3,4", "1,5"), function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
sapply(strsplit(x, ","), function(z) regions[z][[1]])
}
sapply(list("1,2,3,4", "1,5"), function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
sapply(strsplit(x, ","), function(z) regions[z])
}
sapply(list("1,2,3,4", "1"), function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
sapply(strsplit(x, ","), function(z) regions[z][[1]])
}
sapply(list("1,2,3,4", "1"), function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
sapply(strsplit(x, ","), function(z) regions[z])
}
sapply(list("1,2,3,4", "1"), function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
paste %>% sapply(strsplit(x, ","), function(z) regions[z])
}
sapply(list("1,2,3,4", "1"), function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
sapply(strsplit(x, ","), function(z) regions[z])
}
sapply(list("1,2,3,4", "1"), function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
unlist(sapply(strsplit(x, ","), function(z) regions[z]))
}
sapply(list("1,2,3,4", "1"), function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
paste0(sapply(strsplit(x, ","), function(z) regions[z]))
}
sapply(list("1,2,3,4", "1"), function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
paste(sapply(strsplit(x, ","), function(z) regions[z]))
}
sapply(list("1,2,3,4", "1"), function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
test <- sapply(strsplit(x, ","), function(z) regions[z])
return(test[[1]])
}
sapply(list("1,2,3,4", "1"), function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
test <- sapply(strsplit(x, ","), function(z) regions[z])
return(test[1])
}
sapply(list("1,2,3,4", "1"), function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
test <- sapply(strsplit(x, ","), function(z) regions[z])
return(test)
}
sapply(list("1,2,3,4", "1"), function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
test <- sapply(strsplit(x, ","), function(z) regions[z])
return(cat(test))
}
sapply(list("1,2,3,4", "1"), function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
test <- sapply(strsplit(x, ","), function(z) regions[z])
return(as.character(cat(test)))
}
sapply(list("1,2,3,4", "1"), function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
paste0(sapply(strsplit(x, ","), function(z) regions[z]), collapse = "_")
}
sapply(list("1,2,3,4", "1"), function(x) replacing_regions(x, regions), USE.NAMES = F)
sapply(all_genome_regions, function(x) replacing_regions(x, regions), USE.NAMES = F)
all_genome_regions
all_genome_regions$list
sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
{
rm(list = ls())
gc()
graphics.off()
library(ggplot2)
library(gridExtra)
}
all_genome_regions <- read.table("H37Rv_all_genomic_regions.pseudobed", header = T) ; colnames(all_genome_regions)
regions <- c("RLC", "PEPPE", "SUPPLY", "BLINDSPOTS", "REPETITIVE", "NEUTRAL") ; names(regions) <- c(1:5, "none")
replacing_regions <- function(x, regions) {paste0(sapply(strsplit(x, ","), function(z) regions[z]), collapse = ";")}
sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
all_genome_regions
all_genome_regions[, c(1:4)]
all_genome_regions[, c(1:3, 5)]
all_genome_regions[, c(1:3, 5)]
bed <- all_genome_regions[, c(1:3, 5)]
write.table(bed, "all_regions.bed", quote = F, sep = "\t", row.names = F, col.names = F)
replacing_regions <- function(x, regions) {
paste0(unique(sapply(strsplit(x, ","), function(z) regions[z]), collapse = ";"))
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
bed <- all_genome_regions[, c(1:3, 5)]
write.table(bed, "all_regions.bed", quote = F, sep = "\t", row.names = F, col.names = F)
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
bed <- all_genome_regions[, c(1:3, 5)]
bed
all_genome_regions
all_genome_regions <- read.table("H37Rv_all_genomic_regions.pseudobed", header = T) ; colnames(all_genome_regions)
regions <- c("RLC", "PEPPE", "SUPPLY", "BLINDSPOTS", "REPETITIVE", "NEUTRAL") ; names(regions) <- c(1:5, "none")
replacing_regions <- function(x, regions) {
paste0(unique(sapply(strsplit(x, ","), function(z) regions[z]), collapse = ";"))
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
bed <- all_genome_regions[, c(1:3, 5)]
write.table(bed, "all_regions.bed", quote = F, sep = "\t", row.names = F, col.names = F)
bed
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
paste0(region_name_vector, collapse = ";")
}
sapply(c("1,2", "4"), function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <- unique(region_name_vector)
paste0(region_name_vector, collapse = ";")
}
sapply(c("1,2", "4"), function(x) replacing_regions(x, regions), USE.NAMES = F)
sapply(c("1,2,2", "4"), function(x) replacing_regions(x, regions), USE.NAMES = F)
sapply(c("1,2,2", "4,2"), function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
sapply(c("1,2,2", "4,2"), function(x) replacing_regions(x, regions), USE.NAMES = F)
sapply(c("1,2,2", "2,4"), function(x) replacing_regions(x, regions), USE.NAMES = F)
sapply(c("2,1,2,2", "2,4"), function(x) replacing_regions(x, regions), USE.NAMES = F)
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
sapply(c("2,1,2,2", "2,4"), function(x) replacing_regions(x, regions), USE.NAMES = F)
sapply(c("2,1,2,2,4", "2,4"), function(x) replacing_regions(x, regions), USE.NAMES = F)
all_genome_regions <- read.table("H37Rv_all_genomic_regions.pseudobed", header = T) ; colnames(all_genome_regions)
regions <- c("RLC", "PEPPE", "SUPPLY", "BLINDSPOTS", "REPETITIVE", "NEUTRAL") ; names(regions) <- c(1:5, "none")
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
sapply(c("2,1,2,2,4", "2,4"), function(x) replacing_regions(x, regions), USE.NAMES = F)
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
bed <- all_genome_regions[, c(1:3, 5)]
write.table(bed, "all_regions.bed", quote = F, sep = "\t", row.names = F, col.names = F)
{
rm(list = ls())
gc()
graphics.off()
library(ggplot2)
library(gridExtra)
}
all_genome_regions <- read.table("H37Rv_all_genomic_regions.pseudobed", header = T) ; colnames(all_genome_regions)
regions <- c("RLC", "PEPPE", "SUPPLY", "BLINDSPOTS", "REPETITIVE", "NEUTRAL") ; names(regions) <- c(1:5, "none")
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
sapply(c("2,1,2,2,4", "2,4"), function(x) replacing_regions(x, regions), USE.NAMES = F)
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
all_genome_regions
all_genome_regions <- read.table("H37Rv_all_genomic_regions.pseudobed", header = T) ; colnames(all_genome_regions)
regions <- c("RLC", "PEPPE", "SUPPLY", "BLINDSPOTS", "REPETITIVE", "NEUTRAL") ; names(regions) <- c(1:5, "none")
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <- rm(region_name_vector, "SUPPLY")
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
warnings()
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <-  region_name_vector[!"SUPPLY" %in% region_name_vector]
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <-  region_name_vector[!"SUPPLY" %in% region_name_vector]
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <-  region_name_vector[! "SUPPLY" == region_name_vector ]
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <-  region_name_vector[ "SUPPLY" == region_name_vector ]
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <-  region_name_vector[ ! "SUPPLY" %in% region_name_vector ]
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
print("SUPPLY" %in% region_name_vector)
break
region_name_vector <-  region_name_vector[ ! "SUPPLY" %in% region_name_vector ]
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
print(region_name_vector %in% "SUPPLY")
break
region_name_vector <-  region_name_vector[ ! "SUPPLY" %in% region_name_vector ]
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <-  region_name_vector[ ! region_name_vector %in% "SUPPLY" ]
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
print(region_name_vector)
break
region_name_vector <-  region_name_vector[ ! region_name_vector %in% "SUPPLY" ]
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <-  region_name_vector[ ! region_name_vector %in% "SUPPLY" ]
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
all_genome_regions <- read.table("H37Rv_all_genomic_regions.pseudobed", header = T) ; colnames(all_genome_regions)
regions <- c("RLC", "PEPPE", "SUPPLY", "BLINDSPOTS", "REPETITIVE", "NEUTRAL") ; names(regions) <- c(1:5, "none")
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <-  region_name_vector[ ! region_name_vector %in% "SUPPLY" ]
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
all_genome_regions$list
all_genome_regions
all_genome_regions <- read.table("H37Rv_all_genomic_regions.pseudobed", header = T) ; colnames(all_genome_regions)
regions <- c("RLC", "PEPPE", "SUPPLY", "BLINDSPOTS", "REPETITIVE", "NEUTRAL") ; names(regions) <- c(1:5, "none")
replacing_regions <- function(x, regions) {
if(region_name_vector == "SUPPLY"){
region_name_vector="NEUTRAL"
}
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <-  region_name_vector[ ! region_name_vector %in% "SUPPLY" ]
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
if(region_name_vector == "SUPPLY"){
region_name_vector="NEUTRAL"
}
region_name_vector <-  region_name_vector[ ! region_name_vector %in% "SUPPLY" ]
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
warnings()
if(x == "SUPPLY"){
x = "NEUTRAL"
}
replacing_regions <- function(x, regions) {
if(x == "SUPPLY"){
x = "NEUTRAL"
}
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <-  region_name_vector[ ! region_name_vector %in% "SUPPLY" ]
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
bed <- all_genome_regions[, c(1:3, 5)]
write.table(bed, "all_regions.bed", quote = F, sep = "\t", row.names = F, col.names = F)
all_genome_regions$list
{
rm(list = ls())
gc()
graphics.off()
library(ggplot2)
library(gridExtra)
}
all_genome_regions <- read.table("H37Rv_all_genomic_regions.pseudobed", header = T) ; colnames(all_genome_regions)
regions <- c("RLC", "PEPPE", "SUPPLY", "BLINDSPOTS", "REPETITIVE", "NEUTRAL") ; names(regions) <- c(1:5, "none")
replacing_regions <- function(x, regions) {
if(x == "SUPPLY"){
x = "NEUTRAL"
}
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <-  region_name_vector[ ! region_name_vector %in% "SUPPLY" ]
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
bed <- all_genome_regions[, c(1:3, 5)]
write.table(bed, "all_regions.bed", quote = F, sep = "\t", row.names = F, col.names = F)
all_genome_regions$list
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <-  region_name_vector[ ! region_name_vector %in% "SUPPLY" ]
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions$list[all_genome_regions$list == "SUPPLY"]
all_genome_regions <- read.table("H37Rv_all_genomic_regions.pseudobed", header = T) ; colnames(all_genome_regions)
regions <- c("RLC", "PEPPE", "SUPPLY", "BLINDSPOTS", "REPETITIVE", "NEUTRAL") ; names(regions) <- c(1:5, "none")
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <-  region_name_vector[ ! region_name_vector %in% "SUPPLY" ]
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
all_genome_regions$list[all_genome_regions$list == "SUPPLY"]
all_genome_regions$list
all_genome_regions$list[all_genome_regions$list == ""]
all_genome_regions$list[all_genome_regions$list == ""] <- "SUPPLY"
all_genome_regions
all_genome_regions$list
{
rm(list = ls())
gc()
graphics.off()
library(ggplot2)
library(gridExtra)
}
all_genome_regions <- read.table("H37Rv_all_genomic_regions.pseudobed", header = T) ; colnames(all_genome_regions)
regions <- c("RLC", "PEPPE", "SUPPLY", "BLINDSPOTS", "REPETITIVE", "NEUTRAL") ; names(regions) <- c(1:5, "none")
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <-  region_name_vector[ ! region_name_vector %in% "SUPPLY" ]
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
all_genome_regions$list[all_genome_regions$list == ""] <- "NEUTRAL"
bed <- all_genome_regions[, c(1:3, 5)]
write.table(bed, "all_regions.bed", quote = F, sep = "\t", row.names = F, col.names = F)
{
rm(list = ls())
gc()
graphics.off()
library(ggplot2)
library(gridExtra)
}
all_genome_regions <- read.table("H37Rv_all_genomic_regions.pseudobed", header = T) ; colnames(all_genome_regions)
regions <- c("RLC", "PEPPE", "SUPPLY", "BLINDSPOTS", "REPETITIVE", "NEUTRAL") ; names(regions) <- c(1:5, "none")
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <-  region_name_vector[ ! region_name_vector %in% "SUPPLY" ]
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
all_genome_regions$list[all_genome_regions$list == ""] <- "NEUTRAL"
bed <- all_genome_regions[, c(1:3, 5)]
bed
bed$list
independant_bed <- all_genome_regions[, c(1:3, 5)]
all_genome_regions %>%
mutate(list = strsplit(as.character(list), ",")) %>%
unnest(list)
independant_bed %>%
mutate(list = strsplit(as.character(list), ",")) %>%
unnest(list)
library(tidyr)
library(dplyr)
independant_bed %>%
mutate(list = strsplit(as.character(list), ",")) %>%
unnest(list)
independant_bed %>%
mutate(list = strsplit(as.character(list), ";")) %>%
unnest(list)
independant_bed
bed <- independant_bed %>%
mutate(list = strsplit(as.character(list), ";")) %>%
unnest(list)
bed
independant_bed %>%
mutate(list = strsplit(as.character(list), ";")) %>%
unnest(list) %>% as.data.frame
write.table(bed, "all_regions.bed", quote = F, sep = "\t", row.names = F, col.names = F)
independant_bed
independant_bed %>%
mutate(list = strsplit(as.character(list), ";")) %>%
unnest(list) %>% as.data.frame %>% bed
bed <- independant_bed %>%
mutate(list = strsplit(as.character(list), ";")) %>%
unnest(list) %>% as.data.frame
bed
independant_bed
independant_bed
independant_bed$list
paste0(independant_bed$list, "test")
paste0(independant_bed$list, "_independant")
independant_bed$list <- paste0(independant_bed$list, "_independant")
independant_bed
{
rm(list = ls())
gc()
graphics.off()
library(ggplot2)
library(gridExtra)
library(tidyr)
library(dplyr)
}
all_genome_regions <- read.table("H37Rv_all_genomic_regions.pseudobed", header = T) ; colnames(all_genome_regions)
regions <- c("RLC", "PEPPE", "SUPPLY", "BLINDSPOTS", "REPETITIVE", "NEUTRAL") ; names(regions) <- c(1:5, "none")
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <-  region_name_vector[ ! region_name_vector %in% "SUPPLY" ]
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
all_genome_regions$list[all_genome_regions$list == ""] <- "NEUTRAL"
independant_bed <- all_genome_regions[, c(1:3, 5)]
bed <- independant_bed %>%
mutate(list = strsplit(as.character(list), ";")) %>%
unnest(list) %>% as.data.frame
write.table(bed, "H37Rv_non_independant_region.bed", quote = F, sep = "\t", row.names = F, col.names = F)
independant_bed$list <- paste0(independant_bed$list, ";independant")
write.table(independant_bed, "H37Rv_independant_region.bed", quote = F, sep = "\t", row.names = F, col.names = F)
bed
independant_bed
{
rm(list = ls())
gc()
graphics.off()
library(ggplot2)
library(gridExtra)
}
results_by_region <- read.table("results_by_regions.tsv", sep = "\t", header = F)[,c(2, 5, 8, 9, 10, 11, 12, 13)]
all_genome_regions <- read.table("H37Rv_all_genomic_regions.pseudobed", header = T) ; colnames(all_genome_regions)
all_genome_regions <- read.table("H37Rv_all_genomic_regions.pseudobed", header = T)
regions <- c("RLC", "PEPPE", "SUPPLY", "BLINDSPOTS", "REPETITIVE", "NEUTRAL") ; names(regions) <- c(1:5, "none")
replacing_regions <- function(x, regions) {
region_name_vector <- sapply(strsplit(x, ","), function(z) regions[z])
region_name_vector <-  region_name_vector[ ! region_name_vector %in% "SUPPLY" ]
region_name_vector <- sort(unique(region_name_vector))
paste0(region_name_vector, collapse = ";")
}
all_genome_regions$list <- sapply(all_genome_regions$list, function(x) replacing_regions(x, regions), USE.NAMES = F)
all_genome_regions$list[all_genome_regions$list == ""] <- "NEUTRAL"
independant_bed <- all_genome_regions[, c(1:3, 5)]
independant_bed
independant_bed$list
independant_bed$list %in% regions
subset(independant_bed, list %in% regions)
independant_unique_regions <- subset(independant_bed, list %in% regions)
independant_unique_regions <- subset(independant_bed, list %in% regions)
paste0(independant_unique_regions$list, "test")
independant_unique_regions <- subset(independant_bed, list %in% regions)
independant_unique_regions <- paste0(independant_unique_regions$list, "independant")
write.table(independant_unique_regions, "H37Rv_independant_unique_region.bed", quote = F, sep = "\t", row.names = F, col.names = F)
independant_unique_regions <- subset(independant_bed, list %in% regions)
independant_unique_regions$list <- paste0(independant_unique_regions$list, "independant")
independant_unique_regions <- subset(independant_bed, list %in% regions)
independant_unique_regions$list <- paste0(independant_unique_regions$list, "_independant")
write.table(independant_unique_regions, "H37Rv_independant_unique_region.bed", quote = F, sep = "\t", row.names = F, col.names = F)
