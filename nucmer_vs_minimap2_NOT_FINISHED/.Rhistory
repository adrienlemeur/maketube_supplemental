{
rm(list = ls())
gc()
graphics.off()
library(ggplot2)
library(gridExtra)
library(scales)
library(patchwork)
library(gghalves)
library(ggpp)
library(ggpubr)
all_strains_info <- read.table("a_database_to_rule_them_all.tsv", header = F, sep = "\t")[, 1:2]
colnames(all_strains_info) <- c("strain", "source")
all_strains_info$source <- factor(all_strains_info$source, ordered = T)
my_colors = c(maketube = "firebrick", snpmutator = "chocolate1")
custom_facet_labels <- c("nucmer" = "Nucmer", "PAF" = "Minimap2")
custom_facet_labeller <- as_labeller(custom_facet_labels)
my_PCH = c(1, 2, 4, 3)
names(my_PCH) <- levels(all_strains_info$source)
}
maketube_results <- na.omit(read.table("nucmer_paf.tsv", sep = "\t", header = T))
maketube_results <- na.omit(read.table("nucmer_minimap2_results.tsv", sep = "\t", header = T))
{
rm(list = ls())
gc()
#graphics.off()
library(ggplot2)
library(gridExtra)
library(tidyr)
library(flipr)
library(patchwork)
all_strains_info <- read.table("all_strains_info.tsv", header = T, sep = "\t")
source_order <- c('other_lineages', 'lineage4', 'snpmutator', 'maketube')
all_strains_info$source <- factor(all_strains_info$source, levels = source_order, ordered = T)
my_colors = c("dodgerblue", "chartreuse", "firebrick1", "chocolate1")
names(my_colors) <- levels(all_strains_info$source)
my_PCH = c(1, 2, 4, 3)
names(my_PCH) <- levels(all_strains_info$source)
} #start
{
rm(list = ls())
gc()
#graphics.off()
library(ggplot2)
library(gridExtra)
library(tidyr)
library(flipr)
library(patchwork)
all_strains_info <- read.table("all_strains_info.tsv", header = T, sep = "\t")
source_order <- c('other_lineages', 'lineage4', 'snpmutator', 'maketube')
all_strains_info$source <- factor(all_strains_info$source, levels = source_order, ordered = T)
my_colors = c("dodgerblue", "chartreuse", "firebrick1", "chocolate1")
names(my_colors) <- levels(all_strains_info$source)
my_PCH = c(1, 2, 4, 3)
names(my_PCH) <- levels(all_strains_info$source)
} #start
{
rm(list = ls())
gc()
#graphics.off()
library(ggplot2)
library(gridExtra)
library(tidyr)
library(flipr)
library(patchwork)
source_order <- c('other_lineages', 'lineage4', 'snpmutator', 'maketube')
all_strains_info$source <- factor(all_strains_info$source, levels = source_order, ordered = T)
my_colors = c("dodgerblue", "chartreuse", "firebrick1", "chocolate1")
names(my_colors) <- levels(all_strains_info$source)
my_PCH = c(1, 2, 4, 3)
names(my_PCH) <- levels(all_strains_info$source)
} #start
{
maketube_results <- read.table("maketube_metrics.tsv",
sep = "\t", header = F
) %>% na.omit()
colnames(maketube_results) <- c("pipeline", "filter", "variant_caller", "experience", "region", "region2", "variant_class", "TP", "FP", "FN", "RECALL", "PRECISION", "F1")
maketube_results <- subset(maketube_results, RECALL > 0 & PRECISION > 0 & pipeline != "nucmer")
maketube_results$filter_caller <- paste(maketube_results$variant_caller, maketube_results$filter, sep = "_")
maketube_results$pipeline <- factor(maketube_results$pipeline, levels = c("snpmutator", "maketube"), ordered = T)
paste(maketube_results$filter, maketube_results$variant_caller, sep = "_")
filter_callers_labels = c("RAW_mpileup" = "mpileup \n(RAW)", "MTBseq_mpileup" = "MTBseq", "TBprofiler_freebayes" = "TBprofiler", "RAW_freebayes" = "freebayes \n(RAW)", "genotube_freebayes" = "genotube")
filter_caller_order <- c("RAW_mpileup", "RAW_freebayes", "MTBseq_mpileup", "TBprofiler_freebayes", "genotube_freebayes")
filter_caller_colors <- c("cadetblue1", "deepskyblue2", "chartreuse1", "khaki", "hotpink2")
names(filter_caller_colors) <- filter_caller_order
maketube_results$filter_caller <- factor(maketube_results$filter_caller, levels = filter_caller_order, ordered = T)
} #import csv
