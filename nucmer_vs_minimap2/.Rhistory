{
rm(list = ls())
gc()
graphics.off()
library(ggplot2)
library(gridExtra)
library(scales)
library(patchwork)
library(gghalves)
library(ggpp)
library(ggpubr)
all_strains_info <- read.table("a_database_to_rule_them_all.tsv", header = F, sep = "\t")[, 1:2]
colnames(all_strains_info) <- c("strain", "source")
all_strains_info$source <- factor(all_strains_info$source, ordered = T)
my_colors = c(maketube = "firebrick", snpmutator = "chocolate1")
custom_facet_labels <- c("nucmer" = "Nucmer", "PAF" = "Minimap2")
custom_facet_labeller <- as_labeller(custom_facet_labels)
my_PCH = c(1, 2, 4, 3)
names(my_PCH) <- levels(all_strains_info$source)
}
maketube_results <- na.omit(read.table("nucmer_paf.tsv", sep = "\t", header = T))
maketube_results <- na.omit(read.table("nucmer_minimap2_results.tsv", sep = "\t", header = T))
{
rm(list = ls())
gc()
#graphics.off()
library(ggplot2)
library(gridExtra)
library(tidyr)
library(flipr)
library(patchwork)
all_strains_info <- read.table("all_strains_info.tsv", header = T, sep = "\t")
source_order <- c('other_lineages', 'lineage4', 'snpmutator', 'maketube')
all_strains_info$source <- factor(all_strains_info$source, levels = source_order, ordered = T)
my_colors = c("dodgerblue", "chartreuse", "firebrick1", "chocolate1")
names(my_colors) <- levels(all_strains_info$source)
my_PCH = c(1, 2, 4, 3)
names(my_PCH) <- levels(all_strains_info$source)
} #start
{
rm(list = ls())
gc()
#graphics.off()
library(ggplot2)
library(gridExtra)
library(tidyr)
library(flipr)
library(patchwork)
all_strains_info <- read.table("all_strains_info.tsv", header = T, sep = "\t")
source_order <- c('other_lineages', 'lineage4', 'snpmutator', 'maketube')
all_strains_info$source <- factor(all_strains_info$source, levels = source_order, ordered = T)
my_colors = c("dodgerblue", "chartreuse", "firebrick1", "chocolate1")
names(my_colors) <- levels(all_strains_info$source)
my_PCH = c(1, 2, 4, 3)
names(my_PCH) <- levels(all_strains_info$source)
} #start
{
rm(list = ls())
gc()
#graphics.off()
library(ggplot2)
library(gridExtra)
library(tidyr)
library(flipr)
library(patchwork)
source_order <- c('other_lineages', 'lineage4', 'snpmutator', 'maketube')
all_strains_info$source <- factor(all_strains_info$source, levels = source_order, ordered = T)
my_colors = c("dodgerblue", "chartreuse", "firebrick1", "chocolate1")
names(my_colors) <- levels(all_strains_info$source)
my_PCH = c(1, 2, 4, 3)
names(my_PCH) <- levels(all_strains_info$source)
} #start
{
maketube_results <- read.table("maketube_metrics.tsv",
sep = "\t", header = F
) %>% na.omit()
colnames(maketube_results) <- c("pipeline", "filter", "variant_caller", "experience", "region", "region2", "variant_class", "TP", "FP", "FN", "RECALL", "PRECISION", "F1")
maketube_results <- subset(maketube_results, RECALL > 0 & PRECISION > 0 & pipeline != "nucmer")
maketube_results$filter_caller <- paste(maketube_results$variant_caller, maketube_results$filter, sep = "_")
maketube_results$pipeline <- factor(maketube_results$pipeline, levels = c("snpmutator", "maketube"), ordered = T)
paste(maketube_results$filter, maketube_results$variant_caller, sep = "_")
filter_callers_labels = c("RAW_mpileup" = "mpileup \n(RAW)", "MTBseq_mpileup" = "MTBseq", "TBprofiler_freebayes" = "TBprofiler", "RAW_freebayes" = "freebayes \n(RAW)", "genotube_freebayes" = "genotube")
filter_caller_order <- c("RAW_mpileup", "RAW_freebayes", "MTBseq_mpileup", "TBprofiler_freebayes", "genotube_freebayes")
filter_caller_colors <- c("cadetblue1", "deepskyblue2", "chartreuse1", "khaki", "hotpink2")
names(filter_caller_colors) <- filter_caller_order
maketube_results$filter_caller <- factor(maketube_results$filter_caller, levels = filter_caller_order, ordered = T)
} #import csv
{
rm(list = ls())
gc()
graphics.off()
library(ggplot2)
library(gridExtra)
library(scales)
library(patchwork)
library(gghalves)
library(ggpp)
library(ggpubr)
all_strains_info <- read.table("a_database_to_rule_them_all.tsv", header = F, sep = "\t")[, 1:2]
colnames(all_strains_info) <- c("strain", "source")
all_strains_info$source <- factor(all_strains_info$source, ordered = T)
my_colors = c(maketube = "firebrick", snpmutator = "chocolate1")
custom_facet_labels <- c("nucmer" = "Nucmer", "PAF" = "Minimap2")
custom_facet_labeller <- as_labeller(custom_facet_labels)
my_PCH = c(1, 2, 4, 3)
names(my_PCH) <- levels(all_strains_info$source)
}
maketube_results <- na.omit(read.table("nucmer_minimap2_results.tsv", sep = "\t", header = T))
colnames(maketube_results) <- c("pipeline", "sample", "FILTER", "N", "TOTAL", "TOTAL2", "VARIANT_CLASS", "TP", "FP", "FN", "RECALL", "PRECISION", "F1")
maketube_results_wo_SV <- na.omit(read.table("nucmer_paf_perfect2.tsv", sep = "\t", header = T))
colnames(maketube_results_wo_SV) <- c("sample", "pipeline", "FILTER", "TOTAL", "TOTAL2", "VARIANT_CLASS", "TP", "FP", "FN", "RECALL", "PRECISION", "F1")
SNP <- subset(maketube_results,
(pipeline == "maketube" |
pipeline == "snpmutator") &
VARIANT_CLASS == "snp" &
PRECISION != 0 & RECALL != 0)
SNP_noSV <- subset(maketube_results_wo_SV,
(pipeline == "maketube" |
pipeline == "snpmutator") &
VARIANT_CLASS == "snp" &
PRECISION != 0 & RECALL != 0)
all_strains_info <- read.table("a_database_to_rule_them_all.tsv", header = F, sep = "\t")[, 1:2]
all_strains_info
colnames(all_strains_info) <- c("strain", "source")
all_strains_info$source <- factor(all_strains_info$source, ordered = T)
my_colors = c(maketube = "firebrick", snpmutator = "chocolate1")
custom_facet_labels <- c("nucmer" = "Nucmer", "PAF" = "Minimap2")
custom_facet_labeller <- as_labeller(custom_facet_labels)
my_PCH = c(1, 2, 4, 3)
names(my_PCH) <- levels(all_strains_info$source)
maketube_results <- na.omit(read.table("nucmer_minimap2_results.tsv", sep = "\t", header = T))
maketube_results
colnames(maketube_results) <- c("pipeline", "sample", "FILTER", "N", "TOTAL", "TOTAL2", "VARIANT_CLASS", "TP", "FP", "FN", "RECALL", "PRECISION", "F1")
maketube_results_wo_SV <- na.omit(read.table("nucmer_paf_perfect2.tsv", sep = "\t", header = T))
SNP <- subset(maketube_results,
(pipeline == "maketube" |
pipeline == "snpmutator") &
VARIANT_CLASS == "snp" &
PRECISION != 0 & RECALL != 0)
maketube_results <- na.omit(read.table("nucmer_minimap2_results.tsv", sep = "\t", header = T))
colnames(maketube_results) <- c("pipeline", "sample", "FILTER", "N", "TOTAL", "TOTAL2", "VARIANT_CLASS", "TP", "FP", "FN", "RECALL", "PRECISION", "F1")
maketube_results
View(maketube_results)
maketube_results_wo_SV <- na.omit(read.table("nucmer_paf_perfect2.tsv", sep = "\t", header = T))
colnames(maketube_results_wo_SV) <- c("sample", "pipeline", "FILTER", "TOTAL", "TOTAL2", "VARIANT_CLASS", "TP", "FP", "FN", "RECALL", "PRECISION", "F1")
SNP <- subset(maketube_results,
(pipeline == "maketube" |
pipeline == "snpmutator") &
VARIANT_CLASS == "snp" &
PRECISION != 0 & RECALL != 0)
{
PRECISION_noSV <- ggplot(SNP_noSV, aes(pipeline, PRECISION, fill = pipeline)) +
geom_abline(slope = 0, intercept = seq(0.90, 1, by = 0.01), linetype = "dotted") +
geom_half_boxplot(center = TRUE, errorbar.draw = FALSE, width = 0.5, nudge = 0.02, outlier.shape = NA) +
geom_half_violin(side = "r", nudge = 0.02, weight = 1/2) +
geom_point(alpha = 0.5, shape = 21, position = position_jitternudge(width = 0.1, nudge.from = "jittered", x = -0.15)) +
facet_wrap(~ FILTER, nrow = 1, strip.position = "top", scales = "free_x", labeller = custom_facet_labeller) +
theme_classic() +
scale_y_continuous(breaks = seq(0.90, 1, by = 0.05),
limits = c(0.90,1),
expand = expansion(mult = c(0, 0.3))
) +
scale_fill_manual(name = "source", values = my_colors) +
theme(axis.title.y = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "none"
) + ylab("PRECISION")
RECALL_noSV <- ggplot(SNP_noSV, aes(pipeline, RECALL, fill = pipeline)) +
geom_abline(slope = 0, intercept = seq(0.90, 1, by = 0.01), linetype = "dotted") +
geom_half_boxplot(center=TRUE, errorbar.draw=FALSE, width = 0.5, nudge = 0.02, outlier.shape = NA) +
geom_half_violin(side = "r", nudge = 0.02, weight = 1/2) +
geom_point(alpha = 0.5, shape = 21, position = position_jitternudge(width = 0.1, nudge.from = "jittered", x = -0.15)) +
facet_wrap(~ FILTER, nrow = 1, strip.position = "top", scales = "free_x", labeller = custom_facet_labeller) +
theme_classic() +
scale_fill_manual(name = "source", values = my_colors) +
scale_y_continuous(breaks = seq(0.90, 1, by = 0.05),
limits = c(0.90,1),
expand = expansion(mult = c(0, 0.3))
) +
theme(axis.title.y = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_blank(),
strip.text = element_blank(),
strip.background = element_blank(),
legend.position = "none"
) + ylab("RECALL")
}
PRECISION <- ggplot(SNP, aes(pipeline, PRECISION, fill = pipeline)) +
geom_abline(slope = 0, intercept = seq(0.90, 1, by = 0.01), linetype = "dotted") +
geom_half_boxplot(center=TRUE, errorbar.draw=FALSE, width = 0.5, nudge = 0.02, outlier.shape = NA) +
geom_half_violin(side = "r", nudge = 0.02, weight = 1/2) +
geom_point(alpha = 0.5, shape = 21, position = position_jitternudge(width = 0.1, nudge.from = "jittered", x = -0.15)) +
facet_wrap(~ FILTER, nrow = 1, strip.position = "top", scales = "free_x", labeller = custom_facet_labeller) +
theme_classic() +
scale_y_continuous(breaks = seq(0.90, 1, by = 0.05),
limits = c(0.90,1),
expand = expansion(mult = c(0, 0.3))
) +
scale_fill_manual(name = "source", values = my_colors) +
theme(axis.title.y = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "none"
) + ylab("PRECISION")
RECALL <- ggplot(SNP, aes(pipeline, RECALL, fill = pipeline)) +
geom_abline(slope = 0, intercept = seq(0.75, 1, by = 0.01), linetype = "dotted") +
geom_half_boxplot(center=TRUE, errorbar.draw=FALSE, width = 0.5, nudge = 0.02, outlier.shape = NA) +
geom_half_violin(side = "r", nudge = 0.02, weight = 1/2) +
geom_point(alpha = 0.5, shape = 21, position = position_jitternudge(width = 0.1, nudge.from = "jittered", x = -0.15)) +
facet_wrap(~ FILTER, nrow = 1, strip.position = "top", scales = "free_x", labeller = custom_facet_labeller) +
theme_classic() +
scale_fill_manual(name = "source", values = my_colors) +
scale_y_continuous(breaks = seq(0.90, 1, by = 0.05),
limits = c(0.90,1),
expand = expansion(mult = c(0, 0.3))
) +
theme(axis.title.y = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_blank(),
strip.text = element_blank(),
strip.background = element_blank(),
legend.position = "none"
) + ylab("RECALL")
PRECISION / RECALL
maketube_results <- na.omit(read.table("nucmer_minimap2_results.tsv", sep = "\t", header = T))
colnames(maketube_results) <- c("pipeline", "sample", "FILTER", "N", "TOTAL", "TOTAL2", "VARIANT_CLASS", "TP", "FP", "FN", "RECALL", "PRECISION", "F1")
View(maketube_results)
colnames(maketube_results) <- c("sample", "pipeline", "structural_variant", "N", "TOTAL", "TOTAL2", "VARIANT_CLASS", "TP", "FP", "FN", "RECALL", "PRECISION", "F1")
View(maketube_results)
